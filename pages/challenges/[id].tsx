import Head from 'next/head'
import Challenge, { IChallenge } from '../../components/Challenge'
import styles from '../../styles/Challenges.module.css'
import { firestore } from '../../config'
import { GetServerSideProps } from 'next'

interface ChallengePageProps {
    challenge: IChallenge;
}

export default function ChallengePage({challenge}: ChallengePageProps) {
  return (
    <div className={styles.container}>
      <Head>
        <title>{challenge.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          {challenge.title}
        </h1>
        <p>{challenge.description}</p>

        <h2>Goals</h2>
        {challenge.goals.map((goal, i) => (
        <div className={styles.checkboxContainer} key={goal}>
            <input className={styles.checkbox} type="checkbox" id={`goal-${i}`} />
            <label htmlFor={`goal-${i}`}>{goal}</label>
        </div>
        ))}
      </main>

    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async (context) => {
    const challenge = await firestore.collection('challenges').doc(context.params!.id as string)
    .get()
    .then(doc => {
        if (!doc.exists) {
            return undefined;
        } else {
            return {id: doc.id, ...doc.data()} as IChallenge;
        }
    });

    if (challenge === undefined) {
        return {
            notFound: true,
        }
    }

    return {
      props: {
          challenge
      },
    }
  }
  